// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"time"
)

// BillableMetricObjectAggregationTypeEnum - Aggregation type
type BillableMetricObjectAggregationTypeEnum string

const (
	BillableMetricObjectAggregationTypeEnumCountAgg          BillableMetricObjectAggregationTypeEnum = "count_agg"
	BillableMetricObjectAggregationTypeEnumSumAgg            BillableMetricObjectAggregationTypeEnum = "sum_agg"
	BillableMetricObjectAggregationTypeEnumMaxAgg            BillableMetricObjectAggregationTypeEnum = "max_agg"
	BillableMetricObjectAggregationTypeEnumUniqueCountAgg    BillableMetricObjectAggregationTypeEnum = "unique_count_agg"
	BillableMetricObjectAggregationTypeEnumRecurringCountAgg BillableMetricObjectAggregationTypeEnum = "recurring_count_agg"
)

func (e *BillableMetricObjectAggregationTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "count_agg":
		fallthrough
	case "sum_agg":
		fallthrough
	case "max_agg":
		fallthrough
	case "unique_count_agg":
		fallthrough
	case "recurring_count_agg":
		*e = BillableMetricObjectAggregationTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for BillableMetricObjectAggregationTypeEnum: %s", s)
	}
}

type BillableMetricObject struct {
	ActiveSubscriptionsCount int64 `json:"active_subscriptions_count"`
	// Aggregation type
	AggregationType    BillableMetricObjectAggregationTypeEnum `json:"aggregation_type"`
	Code               string                                  `json:"code"`
	CreatedAt          time.Time                               `json:"created_at"`
	Description        *string                                 `json:"description,omitempty"`
	DraftInvoicesCount int64                                   `json:"draft_invoices_count"`
	FieldName          *string                                 `json:"field_name,omitempty"`
	Group              *BillableMetricGroup                    `json:"group,omitempty"`
	LagoID             string                                  `json:"lago_id"`
	Name               string                                  `json:"name"`
	PlansCount         int64                                   `json:"plans_count"`
}
