// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"time"
)

// ChargeObjectChargeModelEnum - Charge model type
type ChargeObjectChargeModelEnum string

const (
	ChargeObjectChargeModelEnumStandard   ChargeObjectChargeModelEnum = "standard"
	ChargeObjectChargeModelEnumGraduated  ChargeObjectChargeModelEnum = "graduated"
	ChargeObjectChargeModelEnumPackage    ChargeObjectChargeModelEnum = "package"
	ChargeObjectChargeModelEnumPercentage ChargeObjectChargeModelEnum = "percentage"
	ChargeObjectChargeModelEnumVolume     ChargeObjectChargeModelEnum = "volume"
)

func (e ChargeObjectChargeModelEnum) ToPointer() *ChargeObjectChargeModelEnum {
	return &e
}

func (e *ChargeObjectChargeModelEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "standard":
		fallthrough
	case "graduated":
		fallthrough
	case "package":
		fallthrough
	case "percentage":
		fallthrough
	case "volume":
		*e = ChargeObjectChargeModelEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ChargeObjectChargeModelEnum: %v", v)
	}
}

type ChargeObject struct {
	BillableMetricCode string `json:"billable_metric_code"`
	// Charge model type
	ChargeModel          ChargeObjectChargeModelEnum `json:"charge_model"`
	CreatedAt            time.Time                   `json:"created_at"`
	GroupProperties      []GroupPropertiesObject     `json:"group_properties,omitempty"`
	Instant              *bool                       `json:"instant,omitempty"`
	LagoBillableMetricID string                      `json:"lago_billable_metric_id"`
	LagoID               string                      `json:"lago_id"`
	Properties           map[string]interface{}      `json:"properties,omitempty"`
}
