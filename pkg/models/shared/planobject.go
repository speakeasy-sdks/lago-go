// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"time"
)

// PlanObjectIntervalEnum - Plan interval
type PlanObjectIntervalEnum string

const (
	PlanObjectIntervalEnumWeekly  PlanObjectIntervalEnum = "weekly"
	PlanObjectIntervalEnumMonthly PlanObjectIntervalEnum = "monthly"
	PlanObjectIntervalEnumYearly  PlanObjectIntervalEnum = "yearly"
)

func (e *PlanObjectIntervalEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "weekly":
		fallthrough
	case "monthly":
		fallthrough
	case "yearly":
		*e = PlanObjectIntervalEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for PlanObjectIntervalEnum: %s", s)
	}
}

type PlanObject struct {
	ActiveSubscriptionsCount int64          `json:"active_subscriptions_count"`
	AmountCents              int64          `json:"amount_cents"`
	AmountCurrency           string         `json:"amount_currency"`
	BillChargesMonthly       *bool          `json:"bill_charges_monthly,omitempty"`
	Charges                  []ChargeObject `json:"charges,omitempty"`
	Code                     string         `json:"code"`
	CreatedAt                time.Time      `json:"created_at"`
	Description              *string        `json:"description,omitempty"`
	DraftInvoicesCount       int64          `json:"draft_invoices_count"`
	// Plan interval
	Interval     PlanObjectIntervalEnum `json:"interval"`
	LagoID       string                 `json:"lago_id"`
	Name         string                 `json:"name"`
	PayInAdvance *bool                  `json:"pay_in_advance,omitempty"`
	TrialPeriod  *float64               `json:"trial_period,omitempty"`
}
