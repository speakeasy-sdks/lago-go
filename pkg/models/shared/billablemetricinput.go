// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// BillableMetricInputBillableMetricAggregationTypeEnum - Aggregation type
type BillableMetricInputBillableMetricAggregationTypeEnum string

const (
	BillableMetricInputBillableMetricAggregationTypeEnumCountAgg          BillableMetricInputBillableMetricAggregationTypeEnum = "count_agg"
	BillableMetricInputBillableMetricAggregationTypeEnumSumAgg            BillableMetricInputBillableMetricAggregationTypeEnum = "sum_agg"
	BillableMetricInputBillableMetricAggregationTypeEnumMaxAgg            BillableMetricInputBillableMetricAggregationTypeEnum = "max_agg"
	BillableMetricInputBillableMetricAggregationTypeEnumUniqueCountAgg    BillableMetricInputBillableMetricAggregationTypeEnum = "unique_count_agg"
	BillableMetricInputBillableMetricAggregationTypeEnumRecurringCountAgg BillableMetricInputBillableMetricAggregationTypeEnum = "recurring_count_agg"
)

func (e BillableMetricInputBillableMetricAggregationTypeEnum) ToPointer() *BillableMetricInputBillableMetricAggregationTypeEnum {
	return &e
}

func (e *BillableMetricInputBillableMetricAggregationTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "count_agg":
		fallthrough
	case "sum_agg":
		fallthrough
	case "max_agg":
		fallthrough
	case "unique_count_agg":
		fallthrough
	case "recurring_count_agg":
		*e = BillableMetricInputBillableMetricAggregationTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for BillableMetricInputBillableMetricAggregationTypeEnum: %v", v)
	}
}

type BillableMetricInputBillableMetric struct {
	// Aggregation type
	AggregationType *BillableMetricInputBillableMetricAggregationTypeEnum `json:"aggregation_type,omitempty"`
	Code            *string                                               `json:"code,omitempty"`
	Description     *string                                               `json:"description,omitempty"`
	FieldName       *string                                               `json:"field_name,omitempty"`
	Group           *BillableMetricGroup                                  `json:"group,omitempty"`
	Name            *string                                               `json:"name,omitempty"`
}

// BillableMetricInput - Billable metric payload
type BillableMetricInput struct {
	BillableMetric BillableMetricInputBillableMetric `json:"billable_metric"`
}
