// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// CreditNoteUpdateInputCreditNoteRefundStatusEnum - Refund status
type CreditNoteUpdateInputCreditNoteRefundStatusEnum string

const (
	CreditNoteUpdateInputCreditNoteRefundStatusEnumPending   CreditNoteUpdateInputCreditNoteRefundStatusEnum = "pending"
	CreditNoteUpdateInputCreditNoteRefundStatusEnumSucceeded CreditNoteUpdateInputCreditNoteRefundStatusEnum = "succeeded"
	CreditNoteUpdateInputCreditNoteRefundStatusEnumFailed    CreditNoteUpdateInputCreditNoteRefundStatusEnum = "failed"
)

func (e *CreditNoteUpdateInputCreditNoteRefundStatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "pending":
		fallthrough
	case "succeeded":
		fallthrough
	case "failed":
		*e = CreditNoteUpdateInputCreditNoteRefundStatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreditNoteUpdateInputCreditNoteRefundStatusEnum: %s", s)
	}
}

type CreditNoteUpdateInputCreditNote struct {
	// Refund status
	RefundStatus CreditNoteUpdateInputCreditNoteRefundStatusEnum `json:"refund_status"`
}

// CreditNoteUpdateInput - Update an existing credit note
type CreditNoteUpdateInput struct {
	CreditNote CreditNoteUpdateInputCreditNote `json:"credit_note"`
}
