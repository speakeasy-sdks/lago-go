// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// AppliedCouponInputAppliedCouponFrequencyEnum - Frequency type
type AppliedCouponInputAppliedCouponFrequencyEnum string

const (
	AppliedCouponInputAppliedCouponFrequencyEnumOnce      AppliedCouponInputAppliedCouponFrequencyEnum = "once"
	AppliedCouponInputAppliedCouponFrequencyEnumRecurring AppliedCouponInputAppliedCouponFrequencyEnum = "recurring"
)

func (e AppliedCouponInputAppliedCouponFrequencyEnum) ToPointer() *AppliedCouponInputAppliedCouponFrequencyEnum {
	return &e
}

func (e *AppliedCouponInputAppliedCouponFrequencyEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "once":
		fallthrough
	case "recurring":
		*e = AppliedCouponInputAppliedCouponFrequencyEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for AppliedCouponInputAppliedCouponFrequencyEnum: %v", v)
	}
}

type AppliedCouponInputAppliedCoupon struct {
	AmountCents        *int64  `json:"amount_cents,omitempty"`
	AmountCurrency     *string `json:"amount_currency,omitempty"`
	CouponCode         string  `json:"coupon_code"`
	ExternalCustomerID string  `json:"external_customer_id"`
	// Frequency type
	Frequency         *AppliedCouponInputAppliedCouponFrequencyEnum `json:"frequency,omitempty"`
	FrequencyDuration *int64                                        `json:"frequency_duration,omitempty"`
	PercentageRate    *float64                                      `json:"percentage_rate,omitempty"`
}

// AppliedCouponInput - Apply coupon payload
type AppliedCouponInput struct {
	AppliedCoupon AppliedCouponInputAppliedCoupon `json:"applied_coupon"`
}
