// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package lago

import (
	"github.com/speakeasy-sdks/lago-go/pkg/models/shared"
	"github.com/speakeasy-sdks/lago-go/pkg/utils"
	"net/http"
	"time"
)

// ServerList contains the list of servers available to the SDK
var ServerList = []string{
	"https://api.getlago.com/api/v1",
}

// HTTPClient provides an interface for suplying the SDK with a custom HTTP client
type HTTPClient interface {
	Do(req *http.Request) (*http.Response, error)
}

// String provides a helper function to return a pointer to a string
func String(s string) *string { return &s }

// Bool provides a helper function to return a pointer to a bool
func Bool(b bool) *bool { return &b }

// Int provides a helper function to return a pointer to an int
func Int(i int) *int { return &i }

// Int64 provides a helper function to return a pointer to an int64
func Int64(i int64) *int64 { return &i }

// Float32 provides a helper function to return a pointer to a float32
func Float32(f float32) *float32 { return &f }

// Float64 provides a helper function to return a pointer to a float64
func Float64(f float64) *float64 { return &f }

// Lago - Lago API allows your application to push customer information and metrics (events) from your application to the billing application.
// https://github.com/getlago - Lago Github
type Lago struct {
	// AddOns - Everything about Add-on collection
	// https://doc.getlago.com/docs/api/add_ons/add-on-object - Find out more
	AddOns *addOns
	// BillableMetrics - Everything about Billable metric collection
	// https://doc.getlago.com/docs/api/billable_metrics/billable-metric-object - Find out more
	BillableMetrics *billableMetrics
	// Coupons - Everything about Coupon collection
	// https://doc.getlago.com/docs/api/coupons/coupon-object - Find out more
	Coupons *coupons
	// CreditNotes - Everything about Credit notes collection
	CreditNotes *creditNotes
	// Customers - Everything about Customer collection
	// https://doc.getlago.com/docs/api/customers/customer-object - Find out more
	Customers *customers
	// Events - Everything about Event collection
	// https://doc.getlago.com/docs/api/events/event-object - Find out more
	Events *events
	// Fees - Everything about Fees
	// https://doc.getlago.com/docs/api/invoices/invoice-object#fee-object - Find out more
	Fees *fees
	// Invoices - Everything about Invoice collection
	// https://doc.getlago.com/docs/api/invoices/invoice-object - Find out more
	Invoices *invoices
	// Organizations - Everything about Organization collection
	// https://doc.getlago.com/docs/api/organizations/organization-object - Find out more
	Organizations *organizations
	// Plans - Everything about Plan collection
	// https://doc.getlago.com/docs/api/plans/plan-object - Find out more
	Plans *plans
	// Subscriptions - Everything about Subscription collection
	// https://doc.getlago.com/docs/api/subscriptions/subscription-object - Find out more
	Subscriptions *subscriptions
	// Wallets - Everything about Wallet collection
	// https://doc.getlago.com/docs/api/wallets/wallet-object - Find out more
	Wallets *wallets
	// Webhooks - Everything about Webhooks
	// https://doc.getlago.com/docs/api/webhooks/message-signature#1-retrieve-the-public-key - Find out more
	Webhooks *webhooks

	// Non-idiomatic field names below are to namespace fields from the fields names above to avoid name conflicts
	_defaultClient  HTTPClient
	_securityClient HTTPClient
	_security       *shared.Security
	_serverURL      string
	_language       string
	_sdkVersion     string
	_genVersion     string
}

type SDKOption func(*Lago)

// WithServerURL allows the overriding of the default server URL
func WithServerURL(serverURL string) SDKOption {
	return func(sdk *Lago) {
		sdk._serverURL = serverURL
	}
}

// WithTemplatedServerURL allows the overriding of the default server URL with a templated URL populated with the provided parameters
func WithTemplatedServerURL(serverURL string, params map[string]string) SDKOption {
	return func(sdk *Lago) {
		if params != nil {
			serverURL = utils.ReplaceParameters(serverURL, params)
		}

		sdk._serverURL = serverURL
	}
}

// WithClient allows the overriding of the default HTTP client used by the SDK
func WithClient(client HTTPClient) SDKOption {
	return func(sdk *Lago) {
		sdk._defaultClient = client
	}
}

// WithSecurity configures the SDK to use the provided security details
func WithSecurity(security shared.Security) SDKOption {
	return func(sdk *Lago) {
		sdk._security = &security
	}
}

// New creates a new instance of the SDK with the provided options
func New(opts ...SDKOption) *Lago {
	sdk := &Lago{
		_language:   "go",
		_sdkVersion: "1.3.0",
		_genVersion: "2.26.0",
	}
	for _, opt := range opts {
		opt(sdk)
	}

	// Use WithClient to override the default client if you would like to customize the timeout
	if sdk._defaultClient == nil {
		sdk._defaultClient = &http.Client{Timeout: 60 * time.Second}
	}
	if sdk._securityClient == nil {
		if sdk._security != nil {
			sdk._securityClient = utils.ConfigureSecurityClient(sdk._defaultClient, sdk._security)
		} else {
			sdk._securityClient = sdk._defaultClient
		}
	}

	if sdk._serverURL == "" {
		sdk._serverURL = ServerList[0]
	}

	sdk.AddOns = newAddOns(
		sdk._defaultClient,
		sdk._securityClient,
		sdk._serverURL,
		sdk._language,
		sdk._sdkVersion,
		sdk._genVersion,
	)

	sdk.BillableMetrics = newBillableMetrics(
		sdk._defaultClient,
		sdk._securityClient,
		sdk._serverURL,
		sdk._language,
		sdk._sdkVersion,
		sdk._genVersion,
	)

	sdk.Coupons = newCoupons(
		sdk._defaultClient,
		sdk._securityClient,
		sdk._serverURL,
		sdk._language,
		sdk._sdkVersion,
		sdk._genVersion,
	)

	sdk.CreditNotes = newCreditNotes(
		sdk._defaultClient,
		sdk._securityClient,
		sdk._serverURL,
		sdk._language,
		sdk._sdkVersion,
		sdk._genVersion,
	)

	sdk.Customers = newCustomers(
		sdk._defaultClient,
		sdk._securityClient,
		sdk._serverURL,
		sdk._language,
		sdk._sdkVersion,
		sdk._genVersion,
	)

	sdk.Events = newEvents(
		sdk._defaultClient,
		sdk._securityClient,
		sdk._serverURL,
		sdk._language,
		sdk._sdkVersion,
		sdk._genVersion,
	)

	sdk.Fees = newFees(
		sdk._defaultClient,
		sdk._securityClient,
		sdk._serverURL,
		sdk._language,
		sdk._sdkVersion,
		sdk._genVersion,
	)

	sdk.Invoices = newInvoices(
		sdk._defaultClient,
		sdk._securityClient,
		sdk._serverURL,
		sdk._language,
		sdk._sdkVersion,
		sdk._genVersion,
	)

	sdk.Organizations = newOrganizations(
		sdk._defaultClient,
		sdk._securityClient,
		sdk._serverURL,
		sdk._language,
		sdk._sdkVersion,
		sdk._genVersion,
	)

	sdk.Plans = newPlans(
		sdk._defaultClient,
		sdk._securityClient,
		sdk._serverURL,
		sdk._language,
		sdk._sdkVersion,
		sdk._genVersion,
	)

	sdk.Subscriptions = newSubscriptions(
		sdk._defaultClient,
		sdk._securityClient,
		sdk._serverURL,
		sdk._language,
		sdk._sdkVersion,
		sdk._genVersion,
	)

	sdk.Wallets = newWallets(
		sdk._defaultClient,
		sdk._securityClient,
		sdk._serverURL,
		sdk._language,
		sdk._sdkVersion,
		sdk._genVersion,
	)

	sdk.Webhooks = newWebhooks(
		sdk._defaultClient,
		sdk._securityClient,
		sdk._serverURL,
		sdk._language,
		sdk._sdkVersion,
		sdk._genVersion,
	)

	return sdk
}
